// Based on Bootstrap custom forms

// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.
.form-type-checkbox {
    position: relative;
    display: block;
    min-height: $font-size-base * $line-height-base;
    padding-left: $custom-control-gutter + $custom-control-indicator-size;
    font-size: 1.4rem;
}

.form-type-checkbox [type="checkbox"] {
    position: absolute;
    left: 0;
    z-index: -1; // Put the input behind the label so it doesn't overlay text
    width: $custom-control-indicator-size;
    height: ($font-size-base * $line-height-base + $custom-control-indicator-size) / 2;
    opacity: 0;

    &:checked ~ label::before {
        color: $custom-control-indicator-checked-color;
        border-color: $custom-control-indicator-checked-border-color;
        @include gradient-bg($custom-control-indicator-checked-bg);
        @include box-shadow($custom-control-indicator-checked-box-shadow);
    }

    &:focus ~ label::before {
        // the mixin is not used here to make sure there is feedback
        @if $enable-shadows {
            box-shadow: $input-box-shadow, $input-focus-box-shadow;
        }
        @else {
            box-shadow: $custom-control-indicator-focus-box-shadow;
            outline: $body-color dashed 0.1rem;
            outline-offset: 0.1rem;
        }
    }

    &:focus:not(:checked) ~ label::before {
        border-color: $custom-control-indicator-focus-border-color;
        outline: $body-color dashed 0.1rem;
        outline-offset: 0.1rem;
    }

    &:not(:disabled):active ~ label::before {
        color: $custom-control-indicator-active-color;
        background-color: $custom-control-indicator-active-bg;
        border-color: $custom-control-indicator-active-border-color;
        @include box-shadow($custom-control-indicator-active-box-shadow);
    }

    // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
    &[disabled],
    &:disabled {
         ~ label {
            color: $custom-control-label-disabled-color;

            &::before {
                background-color: $custom-control-indicator-disabled-bg;
            }
        }
    }
}

// Custom control indicators
//
// Build the custom controls out of pseudo-elements.
.form-type-checkbox label {
    position: relative;
    display: inline-block; // reset drupal
    margin-bottom: 1rem;
    font-weight: normal;
    color: $custom-control-label-color;
    vertical-align: top;
    cursor: $custom-control-cursor;

    // Background-color and (when enabled) gradient
    &::before {
        content: "";
        position: absolute;
        top: -0.2rem;
        left: -($custom-control-gutter + $custom-control-indicator-size);
        display: block;
        width: $custom-control-indicator-size;
        height: $custom-control-indicator-size;
        pointer-events: none;
        background-color: $custom-control-indicator-bg;
        border: $custom-control-indicator-border-color solid $custom-control-indicator-border-width;
        @include box-shadow($custom-control-indicator-box-shadow);
    }

    // Foreground (icon)
    &::after {
        content: "";
        position: absolute;
        top: ($font-size-base * $line-height-base - $custom-control-indicator-size) / 2;
        left: -($custom-control-gutter + $custom-control-indicator-size);
        display: block;
        width: $custom-control-indicator-size;
        height: $custom-control-indicator-size;
        background: no-repeat 50% / #{$custom-control-indicator-bg-size};
    }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.
.form-type-checkbox {
    label::before {
        @include border-radius($custom-checkbox-indicator-border-radius);
    }

    [type="checkbox"]:checked ~ label {
        &::after {
            width: 0.7rem;
            height: 1rem;
            border: solid $body-color;
            border-width: 0 .2rem .2rem 0;
            transform: translateX(0.7rem) rotate(45deg);
        }
    }

    [type="checkbox"]:disabled {
        &:checked ~ label::before {
            background-color: $custom-control-indicator-checked-disabled-bg;
        }

        &:indeterminate ~ label::before {
            background-color: $custom-control-indicator-checked-disabled-bg;
        }
    }
}


// Radios
//
// Tweak just a few things for radios.
// .custom-radio {
//     label::before {
//         // stylelint-disable-next-line property-blacklist
//         border-radius: $custom-radio-indicator-border-radius;
//     }

//     [type="radio"]:checked ~ label {
//         &::after {
//             background-image: escape-svg($custom-radio-indicator-icon-checked);
//         }
//     }

//     [type="radio"]:disabled {
//         &:checked ~ label::before {
//             background-color: $custom-control-indicator-checked-disabled-bg;
//         }
//     }
// }


.form-type-checkbox label::before,
.custom-file-label,
.custom-select {
    @include transition($custom-forms-transition);
}
